name: Build Templater Docker Images

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/dockerfile-templater


jobs:

  build-dockerfiles:
    runs-on: ubuntu:latest

    permissions:
      contents: read

    steps:

      - uses: actions/checkout@v3

      - name: Set up GO
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
        
      - name: Generate Dockerfiles
        run: go run main.go -dockerfile.tpl pkg/docker/Dockerfile.tpl -variants pkg/docker/variants.yml.tpl -variants.cfg pkg/docker/variants.cfg.yml

      - name: Upload Generated Dockerfiles
        uses: actions/upload-artifact@v3
        with:
          name: dockerfiles
          path: dockerfiles

  release-dockerimages:
    runs-on: ubuntu:latest

    needs: build-dockerfiles

    strategy:
      matrix:
        dockerfile: [dockerfiles/Dockerfile.templater.latest, dockerfile/Dockerfile.templater.debug]

    permissions:
      contents: read

    steps:

      - name: Download Generated Dockerfiles
        uses: actions/download-artifact@v3
        with:
          name: dockerfiles

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} 

      - name: Set Image Tag
        run: echo "IMAGE_TAG=$(${{ matrix.dockerfile }} | cut -d '.' -f 3)" >> $GITHUB_ENV

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          push: true
          file: ${{ matrix.dockerfile }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}